function : int * foo1() { int a; return &a; }
function : int & foo2() { int a; return a; }
float[9] a;
float x;
const float y = 5.5;

function : void main()
{
    float *p = &x;

    y = 0; // test for mon/nonmod lval
    &y; // test for rval

    **&p = 0; // test for mon/nonmod lval
    &(**&p); // test for rval

    *p = 0; // test for mon/nonmod lval
    &(*p); // test for rval

    x++ = 0; // test for mon/nonmod lval
    &(x++); // test for rval

    foo1() = 0; // test for mon/nonmod lval
    &(foo1()); // test for rval

    foo2() = 0; // test for mon/nonmod lval
    &(foo2()); // test for rval

    4.2 = 0; // test for mon/nonmod lval
    &(4.2); // test for rval

    *foo1() = 0; // test for mon/nonmod lval
    &(*foo1()); // test for rval

    (x = y) = 0; // test for mon/nonmod lval
    &(x = y); // test for rval

}
